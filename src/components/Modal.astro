---
// Modal.astro
interface Props {
    buttonText?: string;
    iframeSrc: string;
}

const { buttonText = "Abrir Modal", iframeSrc } = Astro.props;
---

<div>
    <button
        id="openModal"
        class="p-2 text-white rounded border hover:bg-black/50"
    >
        {buttonText}
    </button>

    <div
        id="modal"
        class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-30"
    >
        <div class="p-4 rounded-lg h-full relative">
            <button
                id="closeModal"
                class="absolute top-2 right-2 text-white bg-black hover:text-gray-800"
            >
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="h-6 w-6"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                >
                    <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M6 18L18 6M6 6l12 12"></path>
                </svg>
            </button>
            <iframe
                src={iframeSrc}
                class="w-full h-full"
                frameborder="0"
                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                allowfullscreen></iframe>
        </div>
    </div>
</div>

<script>
    const modal = document.getElementById("modal");
    const openButton = document.getElementById("openModal");
    const closeButton = document.getElementById("closeModal");

    openButton?.addEventListener("click", () => {
        modal?.classList.remove("hidden");
        modal?.classList.add("flex");
        document.body.style.overflow = "hidden"; // Previene el scroll del body
    });

    closeButton?.addEventListener("click", () => {
        modal?.classList.remove("flex");
        modal?.classList.add("hidden");
        document.body.style.overflow = ""; // Restaura el scroll
    });

    // Cerrar al hacer clic fuera del modal
    modal?.addEventListener("click", (e) => {
        if (e.target === modal) {
            modal.classList.remove("flex");
            modal.classList.add("hidden");
            document.body.style.overflow = "";
        }
    });

    // Cerrar con la tecla Escape
    document.addEventListener("keydown", (e) => {
        if (e.key === "Escape" && modal?.classList.contains("flex")) {
            modal.classList.remove("flex");
            modal.classList.add("hidden");
            document.body.style.overflow = "";
        }
    });
</script>
